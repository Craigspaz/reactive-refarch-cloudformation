Description: >
    This is template creates the task- and service definition of our reactive service.

Parameters: 

    VPC:
        Description: Choose which VPC this ECS cluster should be deployed to
        Type: AWS::EC2::VPC::Id

    Subnets:
        Description: Choose which subnets this ECS cluster should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to use for the ECS cluster hosts
        Type: AWS::EC2::SecurityGroup::Id
        
    Cluster:
        Description: Please provide the ECS Cluster ID that this service should run on
        Type: String

    DesiredCount: 
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 2

    Listener:
        Description: The Application Load Balancer listener to register with
        Type: String

    Path: 
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /

    TargetGroup:
        Description: The reference to the target group
        Type: String

    EventStream:
      Description: The event stream
      Type: String

    RedisHost:
      Description: The Elasticache-endpoint
      Type: String

    ECSTaskExecutionRole:
      Description: The task execution role
      Type: String

    TaskRole:
      Description: The task role 
      Type: String

Resources:
    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref Listener
            Priority: 2
            Conditions:
                - Field: path-pattern
                  Values: 
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

    Service: 
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties: 
            LaunchType: EC2
            Cluster: !Ref Cluster
            LaunchType: FARGATE
            DeploymentConfiguration:
              MaximumPercent: 200
              MinimumHealthyPercent: 75
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers: 
                - ContainerName: "reactive-service"
                  ContainerPort: 8080
                  TargetGroupArn: !Ref TargetGroup
            NetworkConfiguration:
              AwsvpcConfiguration:
                AssignPublicIp: DISABLED
                SecurityGroups:
                  - !Ref SecurityGroup
                Subnets: !Ref Subnets

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: reactive-service
            NetworkMode: awsvpc
            RequiresCompatibilities: ["FARGATE"]
            Memory: 2048
            Cpu: 1024
            ExecutionRoleArn: !Ref ECSTaskExecutionRole
            TaskRoleArn: !Ref TaskRole
            ContainerDefinitions:
                - Name: reactive-service
                  Essential: true
                  Image: 275396840892.dkr.ecr.us-east-1.amazonaws.com/reactive-refarch:2.1
                  Memory: 2048
                  Cpu: 1024
                  HealthCheck:
                      Command: [ "CMD-SHELL", "curl -f http://localhost:8080/health/check || exit 1" ]
                      Interval: 30
                      Retries: 5
                      Timeout: 10
                      StartPeriod: 30
                  PortMappings:
                    - ContainerPort: 8080
                  Environment: 
                    - Name: REDIS_HOST
                      Value: !Ref RedisHost
                    - Name: EVENT_STREAM
                      Value: !Ref EventStream
                    - Name: REGION
                      Value: !Ref AWS::Region
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref AWS::StackName
                        awslogs-region: !Ref AWS::Region
                        awslogs-stream-prefix: !Ref AWS::StackName
    
    CloudWatchLogsGroup:
        Type: AWS::Logs::LogGroup
        Properties: 
            LogGroupName: !Ref AWS::StackName
            RetentionInDays: 7
